.row{
  .clearfix();
  margin-left: -1 * @padding-base-h;
  margin-right: -1 * @padding-base-h;

  .grid-columns(mobile);
  .grid-offsets(mobile);
}

@media (min-width: @screen-tablet-min) {
  .grid-columns(tablet);
  .grid-offsets(tablet);
}

@media (min-width: @screen-desktop-min) {
  .grid-columns(desktop);
  .grid-offsets(desktop);
}

@media (min-width: @screen-desktop-lg-min) {
  .grid-columns(desktop-lg);
  .grid-offsets(desktop-lg);
}

.grid-columns-padding(mobile);
.grid-columns-padding(tablet);
.grid-columns-padding(desktop);
.grid-columns-padding(desktop-lg);

.grid-columns-padding(@size){
  .col(@index) when  (@index <= 12){
    .col-@{size}-@{index} {
      padding-left: @padding-base-h;
      padding-right: @padding-base-h;


      padding-bottom: @margin-bottom;
    }

    .col(@index+1);
  }

  .col(@index) when  (@index > 12){
  }

  .col(1);
}

.grid-columns(@size){
  .col(@index) when  (@index <= 12){
    .col-@{size}-@{index} {
      float: left;
      width: percentage(@index / 12);
      min-height: 1px;

      padding-left: @padding-base-h;
      padding-right: @padding-base-h;
    }

    .col(@index+1);
  }

  .col(@index) when  (@index > 12){
  }

  .col(1);
}

.grid-offsets(@size){
  .offset(@index) when(@index <= 12){
    .offset-@{size}-@{index}{
      margin-left: -1 * percentage(@index / 12);
    }

    .offset(@index+1);
  }

  .offset(@index) when  (@index > 12){
  }

  .offset(1);
}